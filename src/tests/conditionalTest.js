const conditionalTest = [
  {
    id: 1,
    question: "Which keyword is used to check a condition in Python?",
    options: ["for", "if", "elif", "else"],
    correctAnswer: "if",
  },
  {
    id: 2,
    question: "What will be the output of: if 10 > 5: print('Yes')?",
    options: ["Yes", "No", "Error", "None"],
    correctAnswer: "Yes",
  },
  {
    id: 3,
    question: "Which keyword is used to test multiple conditions?",
    options: ["elseif", "elif", "else if", "when"],
    correctAnswer: "elif",
  },
  {
    id: 4,
    question: "What will be the output?\nx = 5\nif x == 5:\n    print('Match')",
    options: ["Match", "Error", "None", "5"],
    correctAnswer: "Match",
  },
  {
    id: 5,
    question: "What is the default block when all conditions fail?",
    options: ["else", "default", "otherwise", "fail"],
    correctAnswer: "else",
  },
  {
    id: 6,
    question: "Which of the following is correct syntax?",
    options: [
      "if(x>5){print('Hi')}",
      "if x>5 print('Hi')",
      "if x > 5: print('Hi')",
      "if x > 5 then print('Hi')",
    ],
    correctAnswer: "if x > 5: print('Hi')",
  },
  {
    id: 7,
    question: "What is the output?\nx = 2\nif x % 2 == 0:\n    print('Even')\nelse:\n    print('Odd')",
    options: ["Even", "Odd", "Error", "None"],
    correctAnswer: "Even",
  },
  {
    id: 8,
    question: "What will the following code print?\nx = 10\nif x < 5:\n print('Low')\nelif x < 15:\n print('Medium')\nelse:\n print('High')",
    options: ["Low", "Medium", "High", "Error"],
    correctAnswer: "Medium",
  },
  {
    id: 9,
    question: "Which statement is used to skip condition checking?",
    options: ["exit", "continue", "pass", "None"],
    correctAnswer: "pass",
  },
  {
    id: 10,
    question: "What is the output?\nx = 0\nif x:\n print('True')\nelse:\n print('False')",
    options: ["True", "False", "0", "Error"],
    correctAnswer: "False",
  },
  {
    id: 11,
    question: "How many `elif` can we use in an `if` block?",
    options: ["1", "Unlimited", "Only 2", "None"],
    correctAnswer: "Unlimited",
  },
  {
    id: 12,
    question: "Which of the following values is considered False?",
    options: ["0", "''", "[]", "All of these"],
    correctAnswer: "All of these",
  },
  {
    id: 13,
    question: "What is indentation used for in Python conditional statements?",
    options: ["Styling", "Looping", "Defining block", "Nothing"],
    correctAnswer: "Defining block",
  },
  {
    id: 14,
    question: "Which is the correct order of blocks?",
    options: ["else > if > elif", "if > else > elif", "if > elif > else", "elif > if > else"],
    correctAnswer: "if > elif > else",
  },
  {
    id: 15,
    question: "What is the output?\nx = 10\nif x != 10:\n print('Not Ten')\nelse:\n print('Ten')",
    options: ["Ten", "Not Ten", "Error", "None"],
    correctAnswer: "Ten",
  },
  {
    id: 16,
    question: "The expression `if not x:` is true when?",
    options: ["x is True", "x is False", "x is non-zero", "x is non-empty"],
    correctAnswer: "x is False",
  },
  {
    id: 17,
    question: "What does this code print?\nx = 5\nif x > 0:\n if x < 10:\n  print('OK')",
    options: ["OK", "Error", "Nothing", "None"],
    correctAnswer: "OK",
  },
  {
    id: 18,
    question: "How many `else` blocks allowed with `if`?",
    options: ["0", "1", "Unlimited", "2"],
    correctAnswer: "1",
  },
  {
    id: 19,
    question: "What is the output?\nx = -1\nif x:\n print('Yes')\nelse:\n print('No')",
    options: ["Yes", "No", "Error", "None"],
    correctAnswer: "Yes",
  },
  {
    id: 20,
    question: "Which of the following is not valid?",
    options: [
      "if x == 10:",
      "if (x > 5):",
      "if x > 3 then:",
      "if x:",
    ],
    correctAnswer: "if x > 3 then:",
  },
  {
    id: 21,
    question: "What is the role of `elif`?",
    options: ["End if block", "Provide alternate check", "Skip execution", "None"],
    correctAnswer: "Provide alternate check",
  },
  {
    id: 22,
    question: "Can we use `else` without `if`?",
    options: ["Yes", "Only in loops", "No", "Yes with elif"],
    correctAnswer: "No",
  },
  {
    id: 23,
    question: "Which condition evaluates to False?",
    options: ["10 > 5", "5 == 5", "7 < 3", "2 != 2"],
    correctAnswer: "7 < 3",
  },
  {
    id: 24,
    question: "What is the output?\nif 0:\n print('Hi')\nelse:\n print('Bye')",
    options: ["Hi", "Bye", "0", "Error"],
    correctAnswer: "Bye",
  },
  {
    id: 25,
    question: "Which symbol is used for comparison?",
    options: ["=", "==", ":=", "<-"],
    correctAnswer: "==",
  },
  {
    id: 26,
    question: "What happens if indentation is wrong in `if` block?",
    options: ["Ignored", "Warning", "SyntaxError", "RuntimeError"],
    correctAnswer: "SyntaxError",
  },
  {
    id: 27,
    question: "Is `if` a loop or condition?",
    options: ["Loop", "Condition", "Function", "Operator"],
    correctAnswer: "Condition",
  },
  {
    id: 28,
    question: "Which value makes the condition False?\nif ___: print('Run')",
    options: ["1", "True", "''", "-1"],
    correctAnswer: "''",
  },
  {
    id: 29,
    question: "How do you combine multiple conditions?",
    options: ["with &&", "with or", "with and/or", "with +"],
    correctAnswer: "with and/or",
  },
  {
    id: 30,
    question: "Is `if-else` nesting allowed in Python?",
    options: ["No", "Yes", "Only once", "Only with loops"],
    correctAnswer: "Yes",
  },
];

export default conditionalTest;
