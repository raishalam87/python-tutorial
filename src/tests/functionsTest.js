const functionsTest = [
  {
    id: 1,
    question: "What keyword is used to define a function in Python?",
    options: ["func", "function", "def", "define"],
    correctAnswer: "def",
  },
  {
    id: 2,
    question: "What will be the output?\ndef add(x, y): return x + y\nprint(add(2, 3))",
    options: ["5", "23", "None", "Error"],
    correctAnswer: "5",
  },
  {
    id: 3,
    question: "What is the default return value of a function if none is specified?",
    options: ["0", "null", "None", "undefined"],
    correctAnswer: "None",
  },
  {
    id: 4,
    question: "Which is a built-in function in Python?",
    options: ["sum()", "add()", "plus()", "combine()"],
    correctAnswer: "sum()",
  },
  {
    id: 5,
    question: "Which of these is a user-defined function?",
    options: ["print()", "range()", "input()", "calculate()"],
    correctAnswer: "calculate()",
  },
  {
    id: 6,
    question: "What is the output?\ndef greet():\n print('Hello')\ngreet()",
    options: ["Hello", "greet", "None", "Error"],
    correctAnswer: "Hello",
  },
  {
    id: 7,
    question: "Which function call is correct for:\ndef add(a, b): return a + b",
    options: ["add(5)", "add(5, 2)", "add()", "add(a, b)"],
    correctAnswer: "add(5, 2)",
  },
  {
    id: 8,
    question: "Which argument is passed by position?",
    options: ["Keyword", "Default", "Positional", "Optional"],
    correctAnswer: "Positional",
  },
  {
    id: 9,
    question: "Which argument uses 'key=value' syntax?",
    options: ["Default", "Positional", "Variable", "Keyword"],
    correctAnswer: "Keyword",
  },
  {
    id: 10,
    question: "What does *args represent?",
    options: ["Single argument", "List of optional arguments", "Keyword arguments", "Return type"],
    correctAnswer: "List of optional arguments",
  },
  {
    id: 11,
    question: "What is **kwargs used for?",
    options: ["Pass list", "Pass dictionary of arguments", "Return error", "Loop arguments"],
    correctAnswer: "Pass dictionary of arguments",
  },
  {
    id: 12,
    question: "Which of these returns a value?",
    options: ["print()", "return", "input()", "def"],
    correctAnswer: "return",
  },
  {
    id: 13,
    question: "Which type of scope is for variables declared inside a function?",
    options: ["Local", "Global", "Static", "Private"],
    correctAnswer: "Local",
  },
  {
    id: 14,
    question: "How to access a global variable inside a function?",
    options: ["use 'access'", "use 'global' keyword", "use 'public'", "no need to do anything"],
    correctAnswer: "use 'global' keyword",
  },
  {
    id: 15,
    question: "What is recursion?",
    options: ["Calling another function", "Calling itself", "Using loop", "Importing functions"],
    correctAnswer: "Calling itself",
  },
  {
    id: 16,
    question: "What will this print?\ndef test(): pass\nprint(test())",
    options: ["None", "test", "Error", "0"],
    correctAnswer: "None",
  },
  {
    id: 17,
    question: "What is the correct syntax?\ndef hello(name):",
    options: ["define hello(name)", "function hello(name)", "def hello(name):", "func hello:"],
    correctAnswer: "def hello(name):",
  },
  {
    id: 18,
    question: "Which of these functions modifies the list in-place?",
    options: ["sort()", "sorted()", "list()", "map()"],
    correctAnswer: "sort()",
  },
  {
    id: 19,
    question: "How many values can a Python function return?",
    options: ["Only one", "Only string", "Any number", "None"],
    correctAnswer: "Any number",
  },
  {
    id: 20,
    question: "Which keyword is used to skip execution in function?",
    options: ["skip", "pass", "continue", "break"],
    correctAnswer: "pass",
  },
  {
    id: 21,
    question: "Which function gets the absolute value?",
    options: ["abs()", "absolute()", "fabs()", "val()"],
    correctAnswer: "abs()",
  },
  {
    id: 22,
    question: "Can a function return multiple values?",
    options: ["No", "Yes, as a list or tuple", "Only strings", "Only numbers"],
    correctAnswer: "Yes, as a list or tuple",
  },
  {
    id: 23,
    question: "What is lambda function?",
    options: ["Function with no name", "Function with parameters", "Class", "Loop"],
    correctAnswer: "Function with no name",
  },
  {
    id: 24,
    question: "Which of these defines a lambda function?",
    options: ["def f(x): return x", "lambda x: x", "function x()", "f => x"],
    correctAnswer: "lambda x: x",
  },
  {
    id: 25,
    question: "Which function converts string to integer?",
    options: ["int()", "str()", "float()", "bool()"],
    correctAnswer: "int()",
  },
  {
    id: 26,
    question: "What will happen?\ndef f(): return 5\nprint(f())",
    options: ["5", "f", "Error", "None"],
    correctAnswer: "5",
  },
  {
    id: 27,
    question: "Which is a correct function header?",
    options: ["function add()", "def add(x, y):", "add(x, y)", "def add x, y"],
    correctAnswer: "def add(x, y):",
  },
  {
    id: 28,
    question: "Which built-in function helps get length?",
    options: ["size()", "length()", "len()", "count()"],
    correctAnswer: "len()",
  },
  {
    id: 29,
    question: "Which is a recursive function?",
    options: ["def fact(n): return 1 if n==0 else n*fact(n-1)", "print()", "range()", "input()"],
    correctAnswer: "def fact(n): return 1 if n==0 else n*fact(n-1)",
  },
  {
    id: 30,
    question: "What is the correct way to call a function named 'greet'?",
    options: ["call greet", "greet()", "greet", "execute greet"],
    correctAnswer: "greet()",
  },
];

export default functionsTest;
